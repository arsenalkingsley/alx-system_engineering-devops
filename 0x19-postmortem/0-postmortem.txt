
Postmortem: Outage on May 5th, 2023
Summary
On May 5th, 2023, our web application experienced an outage that lasted for approximately 2 hours. The outage was caused by a server issue that resulted in the application being unavailable to users. The impact of the outage was significant, with many users unable to access the app to perform basic tasks during the outage.

Timeline
4:00 PM - A server issue is detected, initially causing very slow response on application. Eventually causing the application to become unavailable to users.
    4:15 PM - The issue is escalated to the devops team for investigation.
    4:30 PM - The devops team determines that the issue is related to a hardware failure on one of the integral servers.
    5:45 PM - The team attempts to restore service by moving the application to another server, but encounters difficulties due to the complexity of the network connection.
    5:30 PM - The team successfully migrates the application to a new server after troubleshooting the networking issue and service is restored to users.
    6:00 PM - The team conducts a postmortem to analyze the incident and identify possible steps to prevent future occurrences.

Cause
The root cause of the outage was a hardware failure on the main server that was hosting the application. Specifically, the hard drive failed, which caused the server to become unresponsive hence hindering service delivery to end users.

Impact
The impact of the outage was significant, with many users unable to access critical functionality of the application during the outage. This resulted in great inconvenience for users, and might have caused significant losses for real time users. Also, potential financial losses incurred by the company is being estimated.

Mitigation and prevention
To mitigate the impact of the outage, the devops team worked quickly to migrate the application to a stable server. However, the migration process was complicated by the complexity of the networking on the server which made it difficult to entirely move to a new server without encountering issues. The complications resulted in a poor time complexity for the entire troubleshoot process.

To prevent a recurrence of this kind of outages in the future, a topology with redundant servers is recommended. Each redundant server serves as a backup to already existing servers and can take the place of the existing server whenever an issue that could could cause a failure arises. 

